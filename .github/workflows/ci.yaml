---

name: CI

permissions:
  contents: read
  packages: write

on:
  push:
    tags:
      - v*
    branches:
      - master
      - stable
      - v1
  release:
    types:
      - published
      - released
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true

      - name: Run tests
        run: go test -coverprofile=./coverage.txt -covermode=atomic -v -timeout=8m -p 4 -short ./...

      - name: Upload coverage
        if: github.event_name != 'pull_request'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt

  fuzz:
    name: Fuzz
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true

      - name: Cache fuzz corpus
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build/fuzz
          key: fuzz-${{ hashFiles('**/*_fuzz*_test.go') }}
          restore-keys: fuzz-

      - name: Run fuzzing
        run: make -j4 fuzz

  docker:
    name: Docker
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/${{ github.repository_owner }}/mtgo:latest

  # lint:
  #   name: golangci-lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-go@v6
  #       with:
  #         go-version: stable
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v8
  #       with:
  #         version: v2.1.0
